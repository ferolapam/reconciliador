name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    # Garante importações "from app..." durante testes, se necessário
    env:
      PYTHONPATH: ${{ github.workspace }}
      
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Show Repository Tree (Debug)
      run: |
        echo "PWD: $(pwd)"
        echo "Tree (top):"
        ls -la
        echo "Tree (app):"
        ls -la app || true
        echo "Show requirements files (if exist):"
        for f in app/requirements*.txt; do 
          echo "---- $f"; 
          sed -n '1,200p' "$f" || true; 
        done

    - name: Upgrade pip and build tools
      run: python -m pip install --upgrade pip setuptools wheel

    # Instala dependências de tempo de execução
    - name: Install Runtime Requirements
      run: |
        if [ -f app/requirements.txt ]; then
          pip install --no-cache-dir -r app/requirements.txt -v
        else
          echo "::error::app/requirements.txt not found"
          ls -la app # Mostra o conteúdo do diretório app em caso de erro
          exit 1 # Falha no job se o arquivo principal não for encontrado
        fi

    # Instalar pacote editável localmente (garante imports 'from app.service import app')
    - name: Install Editable Package (pip -e .)
      run: python -m pip install --no-cache-dir -e .
      
    # Instalar requisitos de desenvolvimento (testes)
    - name: Install Development Requirements (Tests)
      run: |
        if [ -f app/requirements-dev.txt ]; then
          pip install --no-cache-dir -r app/requirements-dev.txt -v
        else
          echo "WARNING: app/requirements-dev.txt not found"
        fi

    # Verificação de depuração (Linha 66 deve estar aqui ou perto)
    - name: Check fastapi and show packages (Debug)
      run: |
        python - <<'PY'
        import importlib, sys
        
        print("sys.path:", sys.path[:6])
        print("fastapi spec:", importlib.util.find_spec("fastapi"))
        
        try:
            import pkg_resources
            print("fastapi version:", pkg_resources.get_distribution("fastapi").version)
        except Exception as e:
            print("fastapi version: not available -", e)
        PY
        pip list --format=columns | sed -n '1,200p'

    - name: Run Tests
      run: pytest -q
