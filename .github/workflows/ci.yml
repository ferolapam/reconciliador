name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      # garante imports "from app..." durante testes se necessário
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Show repo tree (debug)
        run: |
          echo "PWD: $(pwd)"
          echo "Tree (top):"
          ls -la
          echo "Tree (app):"
          ls -la app || true
          echo "Show requirements files (if exist):"
          for f in app/requirements*.txt; do echo "---- $f"; sed -n '1,200p' "$f" || true; done

      - name: Upgrade pip & build tools
        run: python -m pip install --upgrade pip setuptools wheel

      # Instala dependências de runtime
      - name: Install runtime requirements
        run: |
          if [ -f app/requirements.txt ]; then
            pip install --no-cache-dir -r app/requirements.txt -v
          else
            echo "::error::app/requirements.txt not found"
            ls -la
            exit 2
          fi

      # Instalar pacote editável localmente (garante imports 'from app.service import app')
      - name: Install editable package (pip -e .)
        run: |
          # se houver pyproject/setup.cfg, isso instala o pacote local
          python -m pip install --no-cache-dir -e .

      - name: Install dev requirements (tests)
        run: |
          if [ -f app/requirements-dev.txt ]; then
            pip install --no-cache-dir -r app/requirements-dev.txt -v
          else
            echo "WARNING: app/requirements-dev.txt not found"
          fi

      - name: Check fastapi & show packages (debug)
        run: |
          python - <<'PY'
import importlib, sys
print("sys.path:", sys.path[:6])
print("fastapi spec:", importlib.util.find_spec("fastapi"))
try:
    import pkg_resources
    print("fastapi version:", pkg_resources.get_distribution("fastapi").version)
except Exception as e:
    print("fastapi version: not available -", e)
PY
          pip list --format=columns | sed -n '1,200p'

      - name: Run tests
        run: pytest -q
