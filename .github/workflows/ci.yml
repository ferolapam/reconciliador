name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Show repo structure (debug)
        run: |
          echo "=== pwd ==="
          pwd
          echo "=== ls -la top ==="
          ls -la
          echo "=== ls -la app dir ==="
          ls -la app || true
          echo "=== show requirements files ==="
          for f in app/requirements*.txt; do
            echo "---- $f ----"
            sed -n '1,200p' "$f" || echo "(not found)"
          done

      - name: Upgrade pip & build tools
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Install runtime requirements (explicit, verbose)
        run: |
          if [ -f app/requirements.txt ]; then
            pip install --no-cache-dir -r app/requirements.txt -v
          else
            echo "ERROR: app/requirements.txt not found"
            ls -la
            exit 2
          fi

      - name: Verify fastapi installed (debug)
        run: |
          python - <<'PY'
import importlib, sys
print('PYTHONPATH=', sys.path)
print('fastapi present? ', importlib.util.find_spec('fastapi') is not None)
try:
    import pkg_resources
    print('fastapi version:', pkg_resources.get_distribution('fastapi').version)
except Exception:
    print('fastapi version: not found or unable to inspect')
PY

      - name: Install dev requirements (tests)
        run: |
          if [ -f app/requirements-dev.txt ]; then
            pip install --no-cache-dir -r app/requirements-dev.txt -v
          else
            echo "WARNING: app/requirements-dev.txt not found"
          fi

      - name: Show installed packages (debug)
        run: |
          pip list --format=columns | sed -n '1,200p'

      - name: Run tests
        run: |
          pytest -q
